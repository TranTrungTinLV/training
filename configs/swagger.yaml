openapi: 3.0.0
info:
  title: NestJS - Open API 3.0.0
  version: 2.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: ''
  - name: '**********************************API Auth**************************************'
  - name: ''
  - name: Auth
  - name: Email
  - name: ''
  - name: '**********************************API Home**************************************'
  - name: ''
  - name: User
  - name: Home
  - name: ''
  - name: '**********************************API Admin**************************************'
  - name: ''
  - name: ManageUser
  - name: Location
  - name: Trademark
  - name: New
  - name: Categories
  - name: Team
  - name: TeamGroup
  - name: TeamPosition
  - name: Course
  - name: Common
  - name: Slide
  - name: Slideshow
paths:
  /emails:
    post:
      tags:
        - Email
      summary: send code through email
      description: Create email
      operationId: create
      requestBody:
        description: Create email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        201:
          description: "We have sent a verification code to your email.\nPlease enter code to below."
        400:
          description: "1. Invalid email address;\n2. Invalid code!"
  /auth/login:
    post:
      tags:
        - Auth
      summary: login user with credentials
      description: Login with credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        200:
          description: Successful login
        401:
          description: Access token is missing or invalid
        400:
          description: Invalid Credentials
        500:
          description: Interval Server
  /auth/logout:
    post:
      tags:
        - Auth
      summary: logout user
      description: Logout user with credentials
      responses:
        200:
          description: Successful Register
        401:
          description: Access token is missing or invalid
        400:
          description: Invalid Credentials
        500:
          description: Interval Server
      security:
        - Bearer: []
  /auth/refreshToken:
    post:
      tags:
        - Auth
      summary: get new access token
      description: refresh new token
      responses:
        200:
          description: Successful refresh
        401:
          description: Access token is missing or invalid
        400:
          description: Invalid Credentials
        500:
          description: Interval Server
      security:
        - Bearer: []
  /slides:
    get:
      tags:
        - Home
      summary: get slides
      description: Return a list of slides
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
  /locations:
    get:
      tags:
        - Home
      summary: locations
      description: Get all data in HomePage.
      responses:
        200:
          description: Successful refresh
        401:
          description: Access token is missing or invalid
        400:
          description: Invalid Credentials
        500:
          description: Interval Server
  /trademarks:
    get:
      tags:
        - Home
      summary: trademarks
      description: Get all data in HomePage.
      responses:
        200:
          description: Get all Home success
        400:
          description: Invalid status value
  /commons:
    get:
      tags:
        - Home
      summary: read commons
      description: read info Homepage.
      responses:
        200:
          description: Get all Sharing success
        400:
          description: Invalid status value
  /teams:
    get:
      tags:
        - Home
      summary: read teams
      description: read info Homepage.
      parameters:
        - name: page
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: limit
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: sort
          in: query
          description: ID of Share to return
          schema:
            type: string
      responses:
        200:
          description: Get all Sharing success
        400:
          description: Invalid status value
  /news:
    get:
      tags:
        - Home
      summary: read news
      description: read info Homepage.
      parameters:
        - name: page
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: limit
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: sort
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: search
          in: query
          description: ID of Share to return
          schema:
            type: string
      responses:
        200:
          description: Get all Sharing success
        400:
          description: Invalid status value
  /news/{id}:
    get:
      tags:
        - Home
      summary: read new
      description: read info Homepage.
      parameters:
        - name: id
          in: path
          description: ID of Share to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get all Sharing success
        400:
          description: Invalid status value
  /categories:
    get:
      tags:
        - Home
      summary: read categories
      description: read info Homepage.
      parameters:
        - name: sort
          in: query
          description: ID of Share to return
          schema:
            type: string
      responses:
        200:
          description: Get all categories success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
  /categories/{id}:
    get:
      tags:
        - Home
      summary: read categories
      description: Categories.
      parameters:
        - name: id
          in: path
          description: id of categories to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get all Sharing match this categories
        400:
          description: Invalid status value
  /categories/{categories_id}/news:
    get:
      tags:
        - Home
      summary: sort sharing list by category id
      description: Categories.
      parameters:
        - name: categories_id
          in: path
          description: ID of news
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        200:
          description: Get all Sharing match this categories
        400:
          description: Invalid status value
  /courses:
    get:
      tags:
        - Home
      summary: trainingPage
      description: Get all data of TrainingPage.
      parameters:
        - name: page
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: limit
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: sort
          in: query
          description: ID of Share to return
          schema:
            type: string
        - name: search
          in: query
          description: ID of Share to return
          schema:
            type: string
      responses:
        200:
          description: Get all Training success
        400:
          description: Invalid status value
  /courses/{id}:
    get:
      tags:
        - Home
      summary: read course
      description: Returns a single Course
      parameters:
        - name: id
          in: path
          description: ID of Course to return
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
  /users:
    post:
      tags:
        - User
      summary: create new user
      description: Create New
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Create User Successfully
  /users/{id}:
    get:
      tags:
        - User
      summary: read my self
      parameters:
        - name: id
          in: path
          description: Id of the user to get info
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get Info Successfully
        404:
          description: Not Found User
      security:
        - Bearer: []

    put:
      tags:
        - User
      summary: update my self
      description: update user
      operationId: update
      parameters:
        - name: id
          in: path
          description: Id of User
          required: true
          schema:
            type: string
      requestBody:
        description: Update user
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        201:
          description: Updated successfully.
        400:
          description: 1. First name is required;\n2. Last name is required;\n3. Invalid username;\n4.  is not language!
        404:
          description: User not found!|Information not found!
        422:
          description: Create Error
        500:
          description: Internal Server Error
  /admin/users:
    get:
      tags:
        - ManageUser
      summary: get all users
      responses:
        200:
          description: get all successfully.
        404:
          description: User not found!|Information not found!
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    post:
      tags:
        - ManageUser
      summary: create new user
      description: Create New
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Create User Successfully
      security:
        - Bearer: []
  /admin/users/{id}:
    put:
      tags:
        - ManageUser
      summary: update user
      description: update user
      operationId: update
      parameters:
        - name: id
          in: path
          description: Id of User
          required: true
          schema:
            type: string
      requestBody:
        description: Update user
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        201:
          description: Updated successfully.
        400:
          description: 1. First name is required;\n2. Last name is required;\n3. Invalid username;\n4.  is not language!
        404:
          description: User not found!|Information not found!
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - ManageUser
      summary: delete user
      description: Delete User By Id User
      parameters:
        - name: id
          in: path
          description: Id of the User to delete
          required: true
          schema:
            type: string
      responses:
        201:
          description: Delete item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/locations/{children}:
    post:
      tags:
        - Location
      summary: update info in Location
      parameters:
        - name: children
          description: address | email | phone
          in: path
          required: true
          schema:
            type: string
            enum:
              - address
              - email
              - phone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/locations/{children}/{id}:
    put:
      tags:
        - Location
      summary: update info of Location
      parameters:
        - name: children
          in: path
          description: address | email | phone
          required: true
          schema:
            type: string
            enum:
              - address
              - email
              - phone
        - name: id
          in: path
          description: id of element ('address', 'email', 'phonenumber')
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Location
      summary: Delete item ('address', 'email', 'phone') in Location collection
      description: This can only be done by the logged in user.
      parameters:
        - name: children
          in: path
          description: children is ('address', 'email', 'phone') to return
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id of element ('address', 'email', 'phone')
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/trademarks:
    get:
      tags:
        - Trademark
      summary: trademarks
      description: Get all trademark.
      responses:
        200:
          description: Get all Trademark success
        400:
          description: Invalid status value
      security:
        - Bearer: []
  /admin/trademarks/logo:
    patch:
      tags:
        - Trademark
      summary: update logo trademark
      description: This can only be done by the logged in user.
      parameters:
        - name: type
          in: query
          description: type is (favicon', 'logo-icon', 'logo-word', 'logo') to return
          required: true
          schema:
            type: string
            enum:
              - favicon
              - logo-icon
              - logo-word
              - logo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        201:
          description: Update item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/trademarks/license/{id}:
    patch:
      tags:
        - Trademark
      summary: update license
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: id of license
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: L I E N C E S G O D  2023
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        201:
          description: Update item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Trademark
      summary: delete license
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: id of license to return
          required: true
          schema:
            type: string
      responses:
        201:
          description: Update item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/trademarks/license:
    post:
      tags:
        - Trademark
      summary: create license
      description: This can only be done by the logged in user.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: L I E N C E S G O D  2023
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        201:
          description: Update item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/news:
    get:
      tags:
        - New
      summary: Get all posts
      responses:
        201:
          description: Create item success
        422:
          description: Invalid input value
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    post:
      tags:
        - New
      summary: create new post
      description: Create new Sharing
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/New'
      responses:
        201:
          description: Create item success
        422:
          description: Invalid input value
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/news/{id}:
    get:
      tags:
        - New
      summary: get info post
      description: Returns a single Share
      parameters:
        - name: id
          in: path
          description: ID or Slug of Share to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Listed successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New'
        404:
          description: New not found.
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - New
      summary: update new
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/New'

      responses:
        200:
          description: Delete success.
        404:
          description: Share not found.
        500:
          description: Internal Server Error.
      security:
        - Bearer: []
    delete:
      tags:
        - New
      summary: delete new
      description: Delete Shares
      parameters:
        - name: id
          in: path
          description: ID of User to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete success.
        404:
          description: Share not found.
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/categories:
    post:
      tags:
        - Categories
      summary: Create new categories
      description: This can only be done by the logged in user.
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
            application/xml:
              schema:
                $ref: '#/components/schemas/Categories'
      security:
        - Bearer: []
  /admin/categories/{id}:
    get:
      tags:
        - Categories
      summary: read categories
      description: Returns a single categories
      parameters:
        - name: id
          in: path
          description: ID of categories to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - Categories
      summary: Update categories
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: id that need to be update
          required: true
          schema:
            type: string
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        default:
          description: successful operation
      security:
        - Bearer: []
    delete:
      tags:
        - Categories
      summary: Deletes a Categories
      description: delete a Categories
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get Categories success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/commons:
    get:
      tags:
        - Common
      summary: Get all data of ('training','product','mission','vision','introduce') collection
      description: This can only be done by the logged in user.
      parameters:
        - name: destination
          in: query
          description: destination is ('training','product','mission','vision','introduce') to return
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error

    post:
      tags:
        - Common
      summary: Create a new common
      description: This can on be done by the logged in user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  enum:
                    - mission
                    - vision
                    - training
                    - produce
                    - introduce
                  default: mission
                description:
                  type: string
                  example: <p>Sgod là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật Sgod  là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật Sgod là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật.</p>
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /commons/{id}:
    put:
      tags:
        - Common
      description: This can on be done by the logged in user
      parameters:
        - name: id
          in: path
          description: id that need to be update
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: mission
                description:
                  type: string
                  example: <p>Sgod là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật Sgod  là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật Sgod là công ty nghiên cứu và cung cấp dịch vụ/giải pháp công nghệ ứng dụng BlockChain (chuỗi khối) và AI (trí tuệ nhân tạo) vào quản lý nhằm tăng cường khả năng bảo mật.</p>
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /commons/{title}:
    delete:
      tags:
        - Common
      summary: Delete item in common based on title
      description: This can only be done by the logged in user.
      parameters:
        - name: title
          in: path
          description: title is ('training','product','mission','vision','introduce')
          required: true
          schema:
            type: string
      responses:
        201:
          description: Update item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/courses:
    get:
      tags:
        - Course
      summary: get courses
      description: This can only be done by the logged in user.
      responses:
        200:
          description: Get all Course success
        400:
          description: Invalid status value
      security:
        - Bearer: []
    post:
      tags:
        - Course
      summary: create course
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/courses/{id}:
    get:
      tags:
        - Course
      summary: Get Info course
      description: Returns a single Course
      parameters:
        - name: id
          in: path
          description: ID or Slug of Course to return
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - Course
      summary: Update Course
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        default:
          description: successful operation
      security:
        - Bearer: []
    delete:
      tags:
        - Course
      summary: Deletes a Course
      description: delete a Share
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/courses/{id}/{children}:
    post:
      tags:
        - Course
      summary: update info Course
      parameters:
        - name: id
          in: path
          description: ID of Course to return
          required: true
          schema:
            type: string
        - name: children
          in: path
          description: children is (lession,willlearn,studyRoute)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                willlearn:
                  type: array
                  items:
                    type: string
                    example: Hello
                lession:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sgod
                    schedule:
                      type: string
                      example: 2-4-6
                    timeBeginLession:
                      type: string
                      example: 2022-01-01T00:00:00.000Z
                studyRoute:
                  type: object
                  properties:
                    chapter:
                      type: string
                      example: Chapter1
                    chapterContent:
                      type: array
                      items:
                        type: object
                        properties:
                          lesson:
                            type: string
                            example: Bai1
                          numberOfLesson:
                            type: string
                            example: 3

      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/courses/{id}/{children}/{index}:
    put:
      tags:
        - Course
      summary: update info Course
      parameters:
        - name: id
          in: path
          description: ID of Course to return
          required: true
          schema:
            type: string
        - name: children
          in: path
          description: children is (lession,willlearn,studyRoute)
          required: true
          schema:
            type: string
        - name: index
          required: true
          in: path
          description: _id of (lession,studyRoute)
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                willlearn:
                  type: array
                  items:
                    type: string
                    example: Hello
                lession:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sgod
                    schedule:
                      type: string
                      example: 2-4-6
                    timeBeginLession:
                      type: string
                      example: 2022-01-01T00:00:00.000Z
                studyRoute:
                  type: object
                  properties:
                    chapter:
                      type: string
                      example: Chapter1
                    chapterContent:
                      type: array
                      items:
                        type: object
                        properties:
                          lesson:
                            type: string
                            example: Bai1
                          numberOfLesson:
                            type: string
                            example: 3
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Course
      summary: delete info Course
      parameters:
        - name: id
          in: path
          description: ID of Course to return
          required: true
          schema:
            type: string
        - name: children
          in: path
          description: children is (lession,studyRoute)
          required: true
          schema:
            type: string
        - name: index
          required: true
          in: path
          description: _id of (lession,studyRoute)
          schema:
            type: string
      responses:
        201:
          description: Delete item success
        404:
          description: Invalid input value
        422:
          description: Delete Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/teams:
    get:
      tags:
        - Team
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    post:
      tags:
        - Team
      summary: create team
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/teams/{id}:
    get:
      tags:
        - Team
      summary: read team
      description: Returns a single typeshare
      parameters:
        - name: id
          in: path
          description: ID of Team to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - Team
      summary: Update Team
      parameters:
        - name: id
          in: path
          description: id that need to be update
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_Team'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Team
      summary: Deletes a Team
      description: delete a Team
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/team-groups:
    get:
      tags:
        - TeamGroup
      summary: read team-groups
      description: This can only be done by the logged in user.
      responses:
        200:
          description: Get all TeamGroup success
        400:
          description: Invalid status value
      security:
        - Bearer: []
    post:
      tags:
        - TeamGroup
      summary: create team-groups
      description: This can only be done by the logged in user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/TeamGroup'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/team-groups/{id}:
    get:
      tags:
        - TeamGroup
      summary: read team-groups
      description: Returns a single typeshare
      parameters:
        - name: id
          in: path
          description: ID of TeamGroup to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - TeamGroup
      summary: Update TeamGroup
      parameters:
        - name: id
          in: path
          description: id that need to be update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/TeamGroup'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - TeamGroup
      summary: Deletes a TeamGroup
      description: delete a TeamGroup
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/team-groups/{id}/{teamid}:
    post:
      tags:
        - TeamGroup
      summary: add team into team-groups
      description: This can only be done by the logged in user.
      parameters:
        - name: id
          in: path
          description: id of teamgroup
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: id of team
          required: true
          schema:
            type: string
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - TeamGroup
      summary: Deletes a TeamGroup
      description: delete a TeamGroup
      parameters:
        - name: id
          in: path
          description: id of teamgroup
          required: true
          schema:
            type: string
        - name: teamid
          in: path
          description: id of team
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/team-positions:
    get:
      tags:
        - TeamPosition
      summary: read team-positions
      description: This can only be done by the logged in user.
      responses:
        200:
          description: Get all TeamPosition success
        400:
          description: Invalid status value
      security:
        - Bearer: []
    post:
      tags:
        - TeamPosition
      summary: create team-positions
      description: This can only be done by the logged in user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPosition'
          application/xml:
            schema:
              $ref: '#/components/schemas/TeamPosition'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/team-positions/{id}:
    get:
      tags:
        - TeamPosition
      summary: read team-positions
      description: Returns a single typeshare
      parameters:
        - name: id
          in: path
          description: ID of TeamPosition to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - TeamPosition
      summary: Update TeamPosition
      parameters:
        - name: id
          in: path
          description: id that need to be update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPosition'
          application/xml:
            schema:
              $ref: '#/components/schemas/TeamPosition'
      responses:
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - TeamPosition
      summary: Deletes a TeamPosition
      description: delete a TeamPosition
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get data success
        201:
          description: Create item success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/slides:
    get:
      tags:
        - Slide
      summary: get all slides
      responses:
        201:
          description: Create slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    post:
      tags:
        - Slide
      summary: create slide
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
      responses:
        201:
          description: Create slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/slides/{id}:
    get:
      tags:
        - Slide
      summary: get info about slide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Update slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - Slide
      summary: update slide by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
      responses:
        201:
          description: Update slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Slide
      summary: delete slide by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Update slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/slides-show:
    post:
      tags:
        - Slideshow
      summary: create new slide show
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slideshow'
      responses:
        201:
          description: Update slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
  /admin/slides-show/{id}:
    get:
      tags:
        - Slideshow
      summary: get info about slides show
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Update slide success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    put:
      tags:
        - Slideshow
      summary: update slides show by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slideshow'
      responses:
        201:
          description: Update slide show success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
    delete:
      tags:
        - Slideshow
      summary: delete slides show by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Delete slide show success
        404:
          description: Invalid input value
        422:
          description: Create Error
        500:
          description: Internal Server Error
      security:
        - Bearer: []
components:
  schemas:
    Email:
      type: object
      properties:
        addr:
          type: string
          example: infor@gmail.com
    Auth:
      type: object
      properties:
        username:
          type: string
          example: sgod888@gmail.com
        password:
          type: string
          example: Sgod123@
    User:
      type: object
      properties:
        username:
          type: string
          example: sgod888@gmail.com
        password:
          type: string
          example: Sgod123@
        full_name:
          type: object
          properties:
            last:
              type: string
              example: sgod
            first:
              type: string
              example: team
        birthday:
          type: object
          properties:
            day:
              type: number
              example: 10
            month:
              type: number
              example: 11
            year:
              type: number
              example: 2021
        code:
          type: string
          example: 770182
        sex:
          type: string
          enum: ['Male', 'Female', 'Other']
          example: Male
        address:
          type: string
          example: 400 Dang Dinh Tuong, Phuong An Khanh, Q2
    Location:
      type: object
      properties:
        addressItem:
          type: object
          properties:
            area:
              type: string
              example: HN
              default: TeamPosition
              description: teasefd
            address:
              type: string
              example: 11 Thái Thuận, Phường An Phú, Tp. Thủ Đức, Tp. Hồ Chí Minh
            map:
              type: string
              description: address
        emailItem:
          type: object
          properties:
            title:
              type: string
              example: Blockchain & AI
            email:
              type: string
              example: phongnguyenw@gmail.com
            type:
              type: string
              example: chăm sóc
        phoneItem:
          type: object
          properties:
            title:
              type: string
              example: Blockchain & AI
            phone:
              type: string
              example: 0123456789
            type:
              type: string
              example: chăm sóc
    New:
      type: object
      required:
        - title
        - summary
        - content
        - author
        - mode
        - tags
        - categories
      properties:
        title:
          type: string
          example: Sgod
        summary:
          type: string
          example: Sgod & Blockchain
        content:
          type: string
          example: Sgod CV & Blockchain
        author:
          type: string
          example: Sgod
        mode:
          enum:
            - pending
            - public
            - private
            - hidden
        tags:
          type: array
          items:
            type: string
            example: Sgod
        categories:
          type: array
          items:
            type: string
            example: 633f9d90cc7db2ab77ba503d
        image:
          type: string
          format: binary
        time_public:
          type: string
          example: 2023-04-03T07:37:01.292+00:00
    Categories:
      type: object
      properties:
        name:
          type: string
          default: IOT
        parent:
          type: array
          default: ['633f85e83a5cac6e4463c804']
    Course:
      type: object
      properties:
        name:
          type: string
          example: Blockchain
        description:
          type: string
          example: Blockchain & AI
        level:
          type: string
          example: Basic
        price:
          type: string
          example: 3000000
        timeOpening:
          type: string
          example: 2022-01-01
          format: date-time
          pattern: 'DD-MM-YYYY'
        timeExpire:
          type: string
          example: 2022-12-12
          format: date-time
          pattern: 'DD-MM-YYYY'
        maxQuantity:
          type: number
          example: 30
        reducePrice:
          type: number
          example: 2
        teacher:
          type: string
          example: Sgod
        image:
          type: string
          format: binary
    Team:
      type: object
      properties:
        avatar:
          type: string
          format: binary
        full_name:
          type: object
          properties:
            first:
              type: string
              example: Sgod
            last:
              type: string
              example: 5904
        email:
          type: string
          example: infor@gmail.com
        phone:
          type: string
          example: 0343242992
        birthday:
          type: object
          properties:
            day:
              type: number
              example: 4
            month:
              type: number
              example: 6
            year:
              type: number
              example: 2001
        sex:
          type: string
          enum:
            - Male
            - Female
            - Other
          example: Male
        academicLevel:
          type: string
          example: 'Thac Si'
        experience:
          type: string
          example: 'Sgod'
        position:
          type: string
          example: 6438f2938946235f75365baa
        groupId:
          type: string
          example: 6438f2938946235f75365baa
    _Team:
      type: object
      properties:
        avatar:
          type: string
          format: binary
        full_name:
          type: object
          properties:
            first:
              type: string
              example: Sgod
            last:
              type: string
              example: 5904
        email:
          type: string
          example: infor@gmail.com
        phone:
          type: string
          example: 0343242992
        birthday:
          type: object
          properties:
            day:
              type: number
              example: 4
            month:
              type: number
              example: 6
            year:
              type: number
              example: 2001
        sex:
          type: string
          enum:
            - Male
            - Female
            - Other
          example: Male
        academicLevel:
          type: string
          example: 'Thac Si'
        experience:
          type: string
          example: 'Sgod'
    Account:
      type: object
      required:
        - full_name
        - username
        - sex
        - address
      properties:
        avatar:
          type: string
          format: binary
        full_name:
          type: object
          properties:
            first:
              type: string
              example: Sai
            last:
              type: string
              example: Odessa
        username:
          type: string
          example: sgodCompany
        birthday:
          type: object
          properties:
            day:
              type: integer
              example: 29
            month:
              type: integer
              example: 9
            year:
              type: integer
              example: 1997
        sex:
          type: string
          enum:
            - Male
            - Female
            - Other
          default: Male
        address:
          type: string
          example: 2 Street No. 2 Tan Truong Residential Area, Phu Thuan, District 7, Ho Chi Minh City, Vietnam
    Slide:
      type: object
      required:
        - title
        - description
        - navigate
      properties:
        image:
          type: string
          format: binary
        title:
          type: string
          example: sgod slide
        description:
          type: string
          example: sgod slide description
        navigate:
          type: string
          example: image/slide/sgod-slide.png
    Slideshow:
      type: object
      required:
        - name
        - slide
        - effect
      properties:
        name:
          type: string
          example: sgod show 1
        slides:
          type: array
          items:
            type: string
          example: ['6465998e3e6ab4572157fb63', '6465998e3e6ab4572887ad66']
        effect:
          type: string
          enum:
            - 3D Effect
            - Cube
            - Autoplay
            - Default
    TeamGroup:
      type: object
      properties:
        name:
          type: string
          example: Blockchain
    Contact:
      type: object
      properties:
        name:
          type: string
          example: Confirm
        email:
          type: string
          example: 'infof.sgod@gmail.com'
        phone:
          type: string
          example: '0374198888'
        content:
          type: string
          example: Sgod
    TeamPosition:
      type: object
      properties:
        name:
          type: string
          example: Blockchain
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
